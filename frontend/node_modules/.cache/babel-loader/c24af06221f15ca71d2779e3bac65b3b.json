{"remainingRequest":"/home/knr/Documents/InteractQuickFill/frontend/node_modules/babel-loader/lib/index.js!/home/knr/Documents/InteractQuickFill/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/knr/Documents/InteractQuickFill/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/knr/Documents/InteractQuickFill/frontend/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/knr/Documents/InteractQuickFill/frontend/src/App.vue","mtime":1633462194000},{"path":"/home/knr/Documents/InteractQuickFill/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/knr/Documents/InteractQuickFill/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/knr/Documents/InteractQuickFill/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/knr/Documents/InteractQuickFill/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <div id=\"gridElement\" height='270px'  style=\"display:none;\">\n      <strong><u>Contruction des blocs</u></strong> \n        <div>\n              <ul>\n                  <li v-for=\"bloc in ListeOfBlocs\" :key=\"bloc.message\">\n                    {{ bloc.message }} <!-- Gestion du menu contextuelle dans la grille -->\n                  </li>\n              </ul>\n            </div>\n                  <button @click=\"SendDataQuickFill\">Envoyer</button>\n                  <button @click=\"BackTosheat\">Retour</button>\n            <div>\n        </div>\n\n      <hr>\n\n      <ejs-grid ref='grid' id='gridcomp' :allowSelection='true' :allowPaging='true' height='100%' :contextMenuItems='contextMenuItems' :contextMenuOpen='contextMenuOpen' :contextMenuClick='contextMenuClick'> </ejs-grid>\n    </div>\n    \n    <div id=\"spreedsheetcomponent\">\n\n\n      <ejs-spreadsheet ref=\"spreadsheet\" :created=\"created\" :openUrl=\"openUrl\" :saveUrl=\"saveUrl\"  :allowHyperlink=\"false\" :allowImage=\"false\" :allowSorting=\"false\" :allowFiltering=\"false\" :contextMenuBeforeOpen=\"contextMenuBeforeOpen\">\n      </ejs-spreadsheet>\n\n    </div>\n\n\n\n      <div id=\"resultatcomponent\"> <!-- Affichage des programmes -->\n              <hr>\n              <strong><u>Liste des programmes</u></strong>\n              \n              <div>\n                    <p> nombre de programme est de : <span v-for=\"item in lenofprogrammes.slice(0, 1)\" :key=\"item.valuse\"> {{ item.valuse }} </span> , le programme choisi est à  la position numéro : <span v-for=\"item in idporgramme.slice(0, 1)\" :key=\"item.valuse\"> {{ item.valuse }} </span>  </p>\n                  </div>\n                        <button @click=\"VueProgramChoix\">Programme executé</button>\n                  <div>\n              </div> \n            <ejs-grid ref='grid2' id='gridcomprresult' :allowSelection='true' :allowPaging='true'  :row-data-bound='rowDataBound' :rowSelected='rowSelected' height='100%'>\n            </ejs-grid>\n\n    </div>\n\n  </div>\n</template>\n\n<script>\n  import Vue from \"vue\";\n  import { SpreadsheetPlugin,getRangeAddress} from \"@syncfusion/ej2-vue-spreadsheet\";\n  import { GridPlugin, ContextMenu, Page } from '@syncfusion/ej2-vue-grids';\n  import axios from \"axios\";\n  import VueSweetalert2 from 'vue-sweetalert2';\n\n\n\n\n\n  Vue.use(SpreadsheetPlugin); \n  Vue.use(VueSweetalert2); /* pour la gestion des modals */\n  Vue.use(GridPlugin);\n\n\n\n\n\n  export default{\n    name: 'App',\n    data :  function(){  /* la fonction data retourne les variables dynamique (variables reactives) */\n        return {\n\n\n              idporgramme : [\n\n              ], /* Le numero de programme choisi. */\n\n              lenofprogrammes : [\n\n              ], /* Nombre de programmes obtenues apres execution de flashfill ou quickfill */\n\n              ElementToUpdate : 0,  /* variable de comptage des blocs: bvloc b1, b2 ..... */\n\n              listeElementToupdate:[\n\n\n              ], /* liste des evolution des id des blocs*/\n\n              ChoiseQuickFill : {\n                choix : 1\n              }, /*permet de determiner quel variante de QuickFill utilisé */\n\n              idsortieselectionner :{\n                  id:1\n              }, /* Identifier l'exemple sur lequel on cree le bloc*/\n\n              IndiceColoneSortie:{\n                  id:1\n              },/*Contient le numero de la colone de sortie*/\n\n              idColoneUtiliser:{\n\n                id:0\n              },/* Contient id de la colonne courrente */\n\n              ListeDesProgrammesRetourner : [\n\n              ], /* Contient la liste de programmes retourner par flashfill ou quickfilll */\n\n\n              ListeElementsEnvoyerQuickFill:[\n\n\n\n              ],  /* tableau contenant les donées (bloc de sortie + correspondance) à envoyer à QuickFill */\n\n\n              ListeDesSortiesQuickFill:[\n\n\n\n              ], /*Liste de toutes les sorties à envoyer à Quick Fill*/\n\n              LesEntreeQuickFill :\n              [\n\n\n              ], /* tableau qui stocke les chaines d'entrée sigma de quickfill */\n              \n\n              ListeOfBlocs: \n              [\n\n\n              ], /* contient les blocs de la chaine de sortie */\n\n\n              contextMenuItems: \n              [\n                  \n                  {text: 'Make a bloc', target: '.e-content', id: 'makeblock'},\n                  {text: 'Make a constant', target: '.e-content', id: 'makeconst'},\n        \n              ], /* Contient les items du menu contextuel de lq grid */\n\n\n              ListeOfIdOfCotextMenu:\n              [\n\n              ], /* Contient les ids des nouveau items du menu contextuel crée par utilisation des item \"make a bloc\", \"make a constant\" */\n\n\n\n              ListeMessagesOfCotextMenu:\n              [\n\n              ], /* Contient les messages des nouveau items du menu contextuel crée par utilisation des item \"make a bloc\", \"make a constant\" */\n\n\n              listeSorties : \n              [\n\n\n              ], /* tableau contenant les chaines de sorties s */\n\n              listeEntres:\n              [\n\n\n              ], /* tableau contenant les chaines d'entrée sigma pour flashFill */\n\n              IndiceDeLaColonneDeSortie:\n              {\n\n                id:1\n              }, /* Contient indice de la colonne de sortie */\n\n              openUrl: 'https://ej2services.syncfusion.com/production/web-services/api/spreadsheet/open',\n              saveUrl: 'https://ej2services.syncfusion.com/production/web-services/api/spreadsheet/save',\n              \n          \n          };\n\n    },\n\n    methods: \n    {\n\n\n      contextMenuOpen:function (args) \n      {\n\n        var grid = document.getElementsByClassName(\"e-grid\")[0].ej2_instances[0];\n        var that =  this;\n        var numeroIdColonne =  args.rowInfo.cellIndex;\n        var numeroDeLigne = args.rowInfo.rowIndex;\n\n\n        Vue.set(that.idColoneUtiliser,'id',numeroIdColonne);\n        Vue.set(that.idsortieselectionner,'id', numeroDeLigne);\n\n\n\n            if(numeroIdColonne == that.IndiceColoneSortie.id)\n            {\n\n                grid.contextMenuModule.contextMenu.showItems(['Make a bloc']);\n                grid.contextMenuModule.contextMenu.showItems(['Make a constant']);\n\n                if(that.ListeMessagesOfCotextMenu.length > 0)\n                {\n                        that.ListeMessagesOfCotextMenu.forEach(function (item) {\n                            if((item.text != 'Make a bloc') && (item.text != 'Make a constant'))\n                            {\n                              grid.contextMenuModule.contextMenu.hideItems([item.text]);\n\n                            }\n\n                      });\n                  }\n\n\n            }\n            else\n            {\n              grid.contextMenuModule.contextMenu.hideItems(['Make a bloc']);\n              grid.contextMenuModule.contextMenu.hideItems(['Make a constant']);\n\n              if(that.ListeMessagesOfCotextMenu.length > 0)\n              {\n\n                  that.ListeMessagesOfCotextMenu.forEach(function (item) {\n                            if((item.text != 'Make a bloc') && (item.text != 'Make a constant') && (numeroDeLigne == item.idligne))\n                            {\n\n                              grid.contextMenuModule.contextMenu.showItems([item.text]);\n\n                            }\n                            else\n                            {\n                              grid.contextMenuModule.contextMenu.hideItems([item.text]);\n                            }\n\n                  });\n\n\n              }\n\n\n\n            }\n          \n      },\n\n\n        rowSelected : function(args)\n        {\n          /* Gestion et affichage du programme choisi en interface. */\n                var that = this;\n                var index = args.data.ID;\n                Vue.swal.fire({\n                      title: '<strong><u>Programme ayant ID ' + index + '</u></strong>',\n                      icon: 'info',\n                      width: 400,\n                      html:\n                      '<p>' + that.ListeDesProgrammesRetourner[index] +'</p>' ,\n\n                      showCloseButton: true,\n                      showCancelButton: true,\n                      focusConfirm: false,\n                      confirmButtonText:\n                      '<i class=\"fa fa-thumbs-up\"></i> Great!',\n                });\n\n        },\n\n\n\n\n        BackTosheat: function()\n        {\n\n            /*gestion du button retour */\n            var that = this; \n\n            var spreedsheetcomponent = document.getElementById(\"spreedsheetcomponent\");\n            spreedsheetcomponent.style.display = \"block\";\n\n\n            var gridElement = document.getElementById(\"gridElement\");\n            gridElement.style.display = \"none\"; \n\n\n            Object.assign(that.$data, that.$options.data());\n\n\n\n        },\n\n        VueProgramChoix: function() \n        {    \n                /*Affichage du programme executé*/\n                var that = this;\n                var index = that.idporgramme.slice(0, 1);\n                Vue.swal.fire({\n                      title: '<strong><u>Programme executé</u></strong>',\n                      icon: 'info',\n                      width: 400,\n                      html:\n                      '<p>' + that.ListeDesProgrammesRetourner[index[0].valuse] +'</p>' ,\n\n                      showCloseButton: true,\n                      showCancelButton: true,\n                      focusConfirm: false,\n                      confirmButtonText:\n                      '<i class=\"fa fa-thumbs-up\"></i> Great!',\n                });\n        },\n\n        SendDataQuickFill : function()\n        {\n\n              /*Envoie de données à QuickFill*/\n\n              var that =  this;\n              var listeofObjectElement =  new Array();\n              var newObject = new Map();\n              var grid2 = document.getElementsByClassName(\"e-grid\")[1].ej2_instances[0];\n              var resultcomponent = document.getElementById(\"resultatcomponent\");\n              \n\n\n              if(that.ChoiseQuickFill.choix == 1)\n              {\n\n                  setTimeout(function cb() {\n\n\n                        var jsonText1 = JSON.stringify(Array.from(that.listeEntres));\n                        var jsonText3 = JSON.stringify(Array.from(that.ListeElementsEnvoyerQuickFill));\n\n                        \n                        \n                        axios.post(\"http://localhost:8000/QuickFill/sessions/QuickExs\", {\n\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        data: {\n                          \n                          DataEntreeBrute : jsonText1, \n                          DataGlobal : jsonText3,\n\n                        }\n                      })\n                      .then((response) => {\n\n\n\n                              \n                              var DataFinalToBeReplace = response.data[\"DataFinalToBeReplace\"];\n                              var IndiceColoneSortie = response.data[\"IndiceColoneSortie\"];\n                              var timewastQuickfill = response.data[\"timewastQuickfill\"];\n                              var memoryQuickfill = response.data[\"memoryQuickfill\"];\n                              var NombreExemples = response.data[\"NombreExemples\"];\n                              var listedesprogrammes = response.data[\"listedesprogrammes\"];\n                              var indiceduprogrammechoisi = response.data[\"indiceduprogrammechoisi\"];\n                              var AddElement =new Map();\n                              var AddElement2 =new Map();\n                              var Indiceline = 0;\n                              var Arange= \"\"\n                              var spreadsheet = that.$refs.spreadsheet;\n                              \n                              \n\n                              that.listeSorties.forEach(function(item) {\n                                  var newElement = new Array();\n                                  Indiceline = parseInt(item.position);\n                                  newElement.push(item.Output);\n                                  Arange = getRangeAddress([Indiceline-1, IndiceColoneSortie-1])\n                                  spreadsheet.updateCell({ value: newElement },Arange);\n\n                              });\n\n\n                              DataFinalToBeReplace.forEach(function(item) {\n                                  var newElement = new Array();\n                                  Indiceline = parseInt(item.position);\n                                  newElement.push(item.Output);\n                                  Arange = getRangeAddress([Indiceline-1, IndiceColoneSortie-1])\n                                  spreadsheet.updateCell({ value: newElement },Arange);\n\n                              });\n\n\n\n                              var spreedsheetcomponent = document.getElementById(\"spreedsheetcomponent\");\n                              spreedsheetcomponent.style.display = \"block\";\n\n\n                              var gridElement = document.getElementById(\"gridElement\");\n                              gridElement.style.display = \"none\"; \n\n                              Vue.swal.fire({\n                                title: '<strong><u>Statistic of QuickFill execution</u></strong>',\n                                icon: 'info',\n                                width: 400,\n                                html:\n                                  '<p> Time execution :' + timewastQuickfill + 's <br>' + 'Memory use :' + memoryQuickfill + 'Mo <br>' +'Number of programmes :' +  NombreExemples + ' program(s)</p> ',\n\n                                showCloseButton: true,\n                                showCancelButton: true,\n                                focusConfirm: false,\n                                confirmButtonText:\n                                  '<i class=\"fa fa-thumbs-up\"></i> Great!',\n                              });\n\n                            \n                              \n\n\n\n\n\n                              \n\n                            Object.assign(that.$data, that.$options.data());\n                            \n                            \n                            AddElement.set('valuse',NombreExemples);\n                            AddElement2.set('valuse',indiceduprogrammechoisi);\n\n                            let obj = Array.from(AddElement).reduce((obj, [key, value]) => (\n                                                                            Object.assign(obj, { [key]: value })\n                                                                          ), {});\n                            let obj2 = Array.from(AddElement2).reduce((obj, [key, value]) => (\n                                                                            Object.assign(obj, { [key]: value })\n                                                                          ), {});\n\n                              Vue.set(that.lenofprogrammes,0, obj);\n                              Vue.set(that.idporgramme,0, obj2);\n\n                              listedesprogrammes.forEach((element,index) =>{\n                                  \n\n                              newObject.set('ID' , index)\n                              newObject.set('programme' , element)\n                              let obj3 = Array.from(newObject).reduce((obj, [key, value]) => (\n                                              Object.assign(obj, { [key]: value })\n                                            ), {});\n                              listeofObjectElement.push(obj3)\n\n                              Vue.set(that.ListeDesProgrammesRetourner, that.ListeDesProgrammesRetourner.length, element);\n\n                            });\n\n                            grid2.dataSource = listeofObjectElement;\n\n                              \n                            resultcomponent.style.display = \"block\";\n                                    \n\n\n\n                        \n                        \n                        \n                      })\n                      .catch((e) => {\n                        console.log(e);\n                      });\n                  });\n\n\n\n\n              }\n              else if(that.ChoiseQuickFill.choix == 2)\n              {\n\n\n\n\n                  setTimeout(function cb() {\n\n                        var jsonText1 = JSON.stringify(Array.from(that.listeEntres));\n                        var jsonText3 = JSON.stringify(Array.from(that.ListeElementsEnvoyerQuickFill));\n                        var jsonText4 = JSON.stringify(Array.from(that.listeSorties));\n                        \n                        axios.post(\"http://localhost:8000/QuickFill/filter/QuickExsFilter\", {\n\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        data: {\n                          \n                          DataEntreeBrute : jsonText1, \n                          DataGlobal : jsonText3,\n                          MesSorties : jsonText4\n                        }\n                      })\n                      .then((response) => {\n\n\n\n                              \n                              var DataFinalToBeReplace = response.data[\"DataFinalToBeReplace\"];\n                              var IndiceColoneSortie = response.data[\"IndiceColoneSortie\"];\n                              var timewastQuickfill = response.data[\"timewastQuickfill\"];\n                              var memoryQuickfill = response.data[\"memoryQuickfill\"];\n                              var NombreExemples = response.data[\"NombreExemples\"];\n                              var listedesprogrammes = response.data[\"listedesprogrammes\"];\n                              var indiceduprogrammechoisi = response.data[\"indiceduprogrammechoisi\"];\n                              var AddElement =new Map();\n                              var AddElement2 =new Map();\n                              var Indiceline = 0;\n                              var Arange= \"\"\n                              var spreadsheet = that.$refs.spreadsheet;\n                              \n                              \n\n                              that.listeSorties.forEach(function(item) {\n                                  var newElement = new Array();\n                                  Indiceline = parseInt(item.position);\n                                  newElement.push(item.Output);\n                                  Arange = getRangeAddress([Indiceline-1, IndiceColoneSortie-1])\n                                  spreadsheet.updateCell({ value: newElement },Arange);\n\n                              });\n\n\n                              DataFinalToBeReplace.forEach(function(item) {\n                                  var newElement = new Array();\n                                  Indiceline = parseInt(item.position);\n                                  newElement.push(item.Output);\n                                  Arange = getRangeAddress([Indiceline-1, IndiceColoneSortie-1])\n                                  spreadsheet.updateCell({ value: newElement },Arange);\n\n                              });\n\n\n\n                              var spreedsheetcomponent = document.getElementById(\"spreedsheetcomponent\");\n                              spreedsheetcomponent.style.display = \"block\";\n\n\n                              var gridElement = document.getElementById(\"gridElement\");\n                              gridElement.style.display = \"none\"; \n\n                              Vue.swal.fire({\n                                title: '<strong><u>Statistic of QuickFill execution</u></strong>',\n                                icon: 'info',\n                                width: 400,\n                                html:\n                                  '<p> Time execution :' + timewastQuickfill + 's <br>' + 'Memory use :' + memoryQuickfill + 'Mo <br>' +'Number of programmes :' +  NombreExemples + ' program(s)</p> ',\n\n                                showCloseButton: true,\n                                showCancelButton: true,\n                                focusConfirm: false,\n                                confirmButtonText:\n                                  '<i class=\"fa fa-thumbs-up\"></i> Great!',\n                              });\n\n                            \n                              \n\n\n\n\n\n                              \n\n                            Object.assign(that.$data, that.$options.data());\n                            \n                            \n                            AddElement.set('valuse',NombreExemples);\n                            AddElement2.set('valuse',indiceduprogrammechoisi);\n\n                            let obj = Array.from(AddElement).reduce((obj, [key, value]) => (\n                                                                            Object.assign(obj, { [key]: value })\n                                                                          ), {});\n                            let obj2 = Array.from(AddElement2).reduce((obj, [key, value]) => (\n                                                                            Object.assign(obj, { [key]: value })\n                                                                          ), {});\n\n                              Vue.set(that.lenofprogrammes,0, obj);\n                              Vue.set(that.idporgramme,0, obj2);\n\n                              listedesprogrammes.forEach((element,index) =>{\n                                  \n\n                              newObject.set('ID' , index)\n                              newObject.set('programme' , element)\n                              let obj3 = Array.from(newObject).reduce((obj, [key, value]) => (\n                                              Object.assign(obj, { [key]: value })\n                                            ), {});\n                              listeofObjectElement.push(obj3)\n\n                              Vue.set(that.ListeDesProgrammesRetourner, that.ListeDesProgrammesRetourner.length, element);\n\n                            });\n\n                            grid2.dataSource = listeofObjectElement;\n\n                              \n                            resultcomponent.style.display = \"block\";\n                                    \n\n\n\n                        \n                        \n                        \n                      })\n                      .catch((e) => {\n                        console.log(e);\n                      });\n                  });\n\n              }\n              else if(that.ChoiseQuickFill.choix == 3)\n              {\n\n\n\n\n\n                  setTimeout(function cb() {\n\n\n                        var jsonText1 = JSON.stringify(Array.from(that.listeEntres));\n                        var jsonText3 = JSON.stringify(Array.from(that.ListeElementsEnvoyerQuickFill));\n                        \n                        axios.post(\"http://localhost:8000/QuickFill/manyblocs/QuickExsManyBlock\", {\n\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        data: {\n                          \n                          DataEntreeBrute : jsonText1, \n                          DataGlobal : jsonText3\n                        }\n                      })\n                      .then((response) => {\n\n\n\n                              \n                              var DataFinalToBeReplace = response.data[\"DataFinalToBeReplace\"];\n                              var IndiceColoneSortie = response.data[\"IndiceColoneSortie\"];\n                              var timewastQuickfill = response.data[\"timewastQuickfill\"];\n                              var memoryQuickfill = response.data[\"memoryQuickfill\"];\n                              var NombreExemples = response.data[\"NombreExemples\"];\n                              var listedesprogrammes = response.data[\"listedesprogrammes\"];\n                              var indiceduprogrammechoisi = response.data[\"indiceduprogrammechoisi\"];\n                              var AddElement =new Map();\n                              var AddElement2 =new Map();\n                              var Indiceline = 0;\n                              var Arange= \"\"\n                              var spreadsheet = that.$refs.spreadsheet;\n                              \n                              \n                              that.listeSorties.forEach(function(item) {\n                                  var newElement = new Array();\n                                  Indiceline = parseInt(item.position);\n                                  newElement.push(item.Output);\n                                  Arange = getRangeAddress([Indiceline-1, IndiceColoneSortie-1])\n                                  spreadsheet.updateCell({ value: newElement },Arange);\n\n                              });\n\n\n                              DataFinalToBeReplace.forEach(function(item) {\n                                  var newElement = new Array();\n                                  Indiceline = parseInt(item.position);\n                                  newElement.push(item.Output);\n                                  Arange = getRangeAddress([Indiceline-1, IndiceColoneSortie-1])\n                                  spreadsheet.updateCell({ value: newElement },Arange);\n\n                              });\n\n\n\n                              var spreedsheetcomponent = document.getElementById(\"spreedsheetcomponent\");\n                              spreedsheetcomponent.style.display = \"block\";\n\n\n                              var gridElement = document.getElementById(\"gridElement\");\n                              gridElement.style.display = \"none\"; \n\n                              Vue.swal.fire({\n                                title: '<strong><u>Statistic of QuickFill execution</u></strong>',\n                                icon: 'info',\n                                width: 400,\n                                html:\n                                  '<p> Time execution :' + timewastQuickfill + 's <br>' + 'Memory use :' + memoryQuickfill + 'Mo <br>' +'Number of programmes :' +  NombreExemples + ' program(s)</p> ',\n\n                                showCloseButton: true,\n                                showCancelButton: true,\n                                focusConfirm: false,\n                                confirmButtonText:\n                                  '<i class=\"fa fa-thumbs-up\"></i> Great!',\n                              });\n\n                            \n                              \n\n\n\n\n\n                              \n\n                            Object.assign(that.$data, that.$options.data());\n                            \n                            \n                            AddElement.set('valuse',NombreExemples);\n                            AddElement2.set('valuse',indiceduprogrammechoisi);\n\n                            let obj = Array.from(AddElement).reduce((obj, [key, value]) => (\n                                                                            Object.assign(obj, { [key]: value })\n                                                                          ), {});\n                            let obj2 = Array.from(AddElement2).reduce((obj, [key, value]) => (\n                                                                            Object.assign(obj, { [key]: value })\n                                                                          ), {});\n\n                              Vue.set(that.lenofprogrammes,0, obj);\n                              Vue.set(that.idporgramme,0, obj2);\n\n                              listedesprogrammes.forEach((element,index) =>{\n                                  \n\n                              newObject.set('ID' , index)\n                              newObject.set('programme' , element)\n                              let obj3 = Array.from(newObject).reduce((obj, [key, value]) => (\n                                              Object.assign(obj, { [key]: value })\n                                            ), {});\n                              listeofObjectElement.push(obj3)\n\n                              Vue.set(that.ListeDesProgrammesRetourner, that.ListeDesProgrammesRetourner.length, element);\n\n                            });\n\n                            grid2.dataSource = listeofObjectElement;\n\n                              \n                            resultcomponent.style.display = \"block\";\n                                    \n\n\n\n                        \n                        \n                        \n                      })\n                      .catch((e) => {\n                        console.log(e);\n                      });\n                  });\n\n              }\n\n \n\n        },\n        contextMenuClick: function(args) \n        {\n\n\n              var that = this;\n              var grid = document.getElementsByClassName(\"e-grid\")[0].ej2_instances[0];\n\n              if(that.ChoiseQuickFill.choix == 3)\n              {\n\n\n                    if(args.item.id === 'makeblock') \n                    {       \n\n                          \n                            \n\n                            document.execCommand(\"copy\");\n\n                            setTimeout(async () => \n                            {\n                                  const text = await navigator.clipboard.readText();\n                                  var AddBloc =new Map();\n                                  var InfoBlocMenuDistingue = new Map();\n                                  var AddtoContexMenu = new Map();\n                                  var EtsPresent =  false;\n                                  var idEstPresent = false;\n\n\n\n\n\n                                  that.ListeOfIdOfCotextMenu.forEach(function (item) {\n\n                                      \n                                      if(item == text)\n                                      {\n\n                                          EtsPresent =  true;\n                                      }\n                                  });\n\n                                  if(EtsPresent)\n                                  {\n\n                                    alert(' Bloc deja creer')\n                                  }\n                                  else\n                                  {\n                                        \n\n\n                                        that.listeElementToupdate.forEach(function (item,index) {\n                                            if(index == parseInt(that.idsortieselectionner.id, 10))\n                                            {\n                                              idEstPresent = true;\n                                            }\n                                        });\n\n                                        if(idEstPresent == false)\n                                        {\n                                              Vue.set(that.listeElementToupdate,parseInt(that.idsortieselectionner.id, 10), 1);\n                                              \n\n\n                                              AddBloc.set('message',text);\n                                              AddBloc.set('NameBloc','b'+that.listeElementToupdate[parseInt(that.idsortieselectionner.id, 10)]+'***'+text);\n\n                                              AddtoContexMenu.set('text' , 'Contient le bloc ' + text);\n                                              AddtoContexMenu.set('target' , '.e-content');\n                                              AddtoContexMenu.set('id' , text);\n\n                                              InfoBlocMenuDistingue.set('text' , 'Contient le bloc ' + text);\n                                              InfoBlocMenuDistingue.set('idligne' , parseInt(that.idsortieselectionner.id, 10));\n\n                                              let obj = Array.from(AddBloc).reduce((obj, [key, value]) => (\n                                                                          Object.assign(obj, { [key]: value })\n                                                                        ), {});\n                                              let obj2 = Array.from(AddtoContexMenu).reduce((obj, [key, value]) => (\n                                                                          Object.assign(obj, { [key]: value }) \n                                                                        ), {});\n                                              \n                                              let obj3 = Array.from(InfoBlocMenuDistingue).reduce((obj, [key, value]) => (\n                                                                          Object.assign(obj, { [key]: value }) \n                                                                        ), {});\n\n                                              grid.contextMenuModule.contextMenu.insertAfter( \n                                                  [obj2], that.contextMenuItems[that.contextMenuItems.length-1].id, true); \n                                            \n                                              \n                                              \n\n                                              Vue.set(that.ListeOfBlocs,that.ListeOfBlocs.length, obj);\n                                              Vue.set(that.ListeOfIdOfCotextMenu,that.ListeOfIdOfCotextMenu.length, text);\n                                              Vue.set(that.ListeMessagesOfCotextMenu,that.ListeMessagesOfCotextMenu.length, obj3);\n                                              \n\n\n                                        }\n                                        else\n                                        {\n\n\n                                             Vue.set(that.listeElementToupdate,parseInt(that.idsortieselectionner.id, 10), that.listeElementToupdate[parseInt(that.idsortieselectionner.id, 10)] + 1);\n\n                                              AddBloc.set('message',text);\n                                              AddBloc.set('NameBloc','b'+that.listeElementToupdate[parseInt(that.idsortieselectionner.id, 10)]+'***'+text);\n\n                                              AddtoContexMenu.set('text' , 'Contient le bloc ' + text);\n                                              AddtoContexMenu.set('target' , '.e-content');\n                                              AddtoContexMenu.set('id' , text);\n\n                                              InfoBlocMenuDistingue.set('text' , 'Contient le bloc ' + text);\n                                              InfoBlocMenuDistingue.set('idligne' , parseInt(that.idsortieselectionner.id, 10));\n\n                                              let obj = Array.from(AddBloc).reduce((obj, [key, value]) => (\n                                                                          Object.assign(obj, { [key]: value })\n                                                                        ), {});\n                                              let obj2 = Array.from(AddtoContexMenu).reduce((obj, [key, value]) => (\n                                                                          Object.assign(obj, { [key]: value }) \n                                                                        ), {});\n                                              \n                                              let obj3 = Array.from(InfoBlocMenuDistingue).reduce((obj, [key, value]) => (\n                                                                          Object.assign(obj, { [key]: value }) \n                                                                        ), {});\n\n                                              grid.contextMenuModule.contextMenu.insertAfter( \n                                                  [obj2], that.contextMenuItems[that.contextMenuItems.length-1].id, true); \n                                            \n                                              \n                                              \n\n                                              Vue.set(that.ListeOfBlocs,that.ListeOfBlocs.length, obj);\n                                              Vue.set(that.ListeOfIdOfCotextMenu,that.ListeOfIdOfCotextMenu.length, text);\n                                              Vue.set(that.ListeMessagesOfCotextMenu,that.ListeMessagesOfCotextMenu.length, obj3);\n\n\n\n                                        }\n\n\n                                  }\n\n                            }, 200);\n                        \n                          \n                    }\n                    else if(args.item.id === 'makeconst')\n                    {\n\n\n\n\n                          document.execCommand(\"copy\");\n\n                            setTimeout(async () => \n                            {\n\n                                  var AddBloc =new Map();\n                                  var EtsPresent =  false;\n                                  var element = new Map();\n                                  var idEstPresent = false;\n\n                                  const text = await navigator.clipboard.readText();\n\n                                  that.ListeOfIdOfCotextMenu.forEach(function (item) {\n\n                                          \n                                          if(item == text)\n                                          {\n\n                                              EtsPresent =  true;\n                                          }\n                                      });\n\n                                      if(EtsPresent)\n                                      {\n\n                                        alert(' Bloc deja creer')\n                                      }\n                                      else\n                                      {\n                                            that.listeElementToupdate.forEach(function (item,index) {\n                                                if(index == parseInt(that.idsortieselectionner.id, 10))\n                                                {\n                                                  idEstPresent = true;\n                                                }\n                                            });\n                                          if(idEstPresent == false)\n                                          {                            \n                                                Vue.set(that.listeElementToupdate,parseInt(that.idsortieselectionner.id, 10), 1);                \n                                            \n                                                \n                                                \n                                                element = new Map();\n\n                                                AddBloc.set('message','Le bloc ' + text + ' est une  constante');\n                                                AddBloc.set('NameBloc','b'+that.listeElementToupdate[parseInt(that.idsortieselectionner.id, 10)]+'***'+text);\n\n                                                  element.set('b'+that.listeElementToupdate[parseInt(that.idsortieselectionner.id, 10)]+'***'+text,\"ConstStr\");\n                                                  element.set('Entrer' , that.listeSorties[parseInt(that.idsortieselectionner.id, 10)].Entrer);\n                                                  element.set('Output' , that.listeSorties[parseInt(that.idsortieselectionner.id, 10)].Output);\n                                                \n\n\n                                                let obj = Array.from(AddBloc).reduce((obj, [key, value]) => (\n                                                                            Object.assign(obj, { [key]: value })\n                                                                          ), {});\n                                                let obj2 = Array.from(element).reduce((obj2, [key, value]) => (\n                                                                              Object.assign(obj2, { [key]: value })\n                                                                            ), {});\n\n\n                                              \n                                                Vue.set(that.ListeOfBlocs,that.ListeOfBlocs.length, obj);\n                                                Vue.set(that.ListeElementsEnvoyerQuickFill, that.ListeElementsEnvoyerQuickFill.length, obj2);\n                                          }\n                                          else\n                                          {\n\n\n                                                    Vue.set(that.listeElementToupdate,parseInt(that.idsortieselectionner.id, 10), that.listeElementToupdate[parseInt(that.idsortieselectionner.id, 10)] + 1);\n                                                \n                                                    \n                                                    \n                                                    element = new Map();\n\n                                                    AddBloc.set('message','Le bloc ' + text + ' est une  constante');\n                                                    AddBloc.set('NameBloc','b'+that.listeElementToupdate[parseInt(that.idsortieselectionner.id, 10)]+'***'+text);\n\n                                                      element.set('b'+that.listeElementToupdate[parseInt(that.idsortieselectionner.id, 10)]+'***'+text,\"ConstStr\");\n                                                      element.set('Entrer' , that.listeSorties[parseInt(that.idsortieselectionner.id, 10)].Entrer);\n                                                      element.set('Output' , that.listeSorties[parseInt(that.idsortieselectionner.id, 10)].Output);\n                                                    \n\n\n                                                    let obj = Array.from(AddBloc).reduce((obj, [key, value]) => (\n                                                                                Object.assign(obj, { [key]: value })\n                                                                              ), {});\n                                                    let obj2 = Array.from(element).reduce((obj2, [key, value]) => (\n                                                                                  Object.assign(obj2, { [key]: value })\n                                                                                ), {});\n\n\n                                                  \n                                                    Vue.set(that.ListeOfBlocs,that.ListeOfBlocs.length, obj);\n                                                    Vue.set(that.ListeElementsEnvoyerQuickFill, that.ListeElementsEnvoyerQuickFill.length, obj2);\n                                          \n                                          }\n                                            \n\n\n\n\n                                      }\n\n\n\n\n                                \n                                  \n                            }, 200);\n\n                    }\n                    else if(that.ListeOfIdOfCotextMenu.some(e => e === args.item.id))\n                    {\n\n                          document.execCommand(\"copy\");\n\n\n\n                            setTimeout(async () => \n                            {\n\n                                  const text = await navigator.clipboard.readText();\n\n                                  that.ListeOfBlocs.forEach(function (item) {\n\n                                      \n                                      if(item.message == args.item.id)\n                                      {\n\n                                          var element = new Map();\n\n                                          element.set(item.NameBloc,text);\n                                          \n                                          element.set('Entrer' , that.listeSorties[parseInt(that.idsortieselectionner.id, 10)].Entrer);\n                                          element.set('Output' , that.listeSorties[parseInt(that.idsortieselectionner.id, 10)].Output);\n                                          console.log(\"test des test  : \" , args.event.target);\n                                          element.set('KeyOfElement' , \"v\" + (parseInt(that.idColoneUtiliser.id)+1));\n\n                                          console.log(\"fffffffffffffffffffffffff : \" , element);\n                                          let obj = Array.from(element).reduce((obj, [key, value]) => (\n                                                                      Object.assign(obj, { [key]: value })\n                                                                    ), {});\n\n                                          Vue.set(that.ListeElementsEnvoyerQuickFill, that.ListeElementsEnvoyerQuickFill.length, obj);\n\n                                          \n                                      }\n                                  });\n\n                                \n                                  \n                            }, 200);\n\n\n                    \n\n\n\n\n                    }\n\n\n\n              }\n              else\n              {\n\n              \n                    if(args.item.id === 'makeblock') \n                    {       \n\n                            \n                            \n\n                            document.execCommand(\"copy\");\n\n                            setTimeout(async () => \n                            {\n                                  const text = await navigator.clipboard.readText();\n                                  var AddBloc =new Map();\n                                  var InfoBlocMenuDistingue = new Map();\n                                  var AddtoContexMenu = new Map();\n                                  var EtsPresent =  false;\n\n\n\n\n\n                                  that.ListeOfIdOfCotextMenu.forEach(function (item) {\n\n                                      \n                                      if(item == text)\n                                      {\n\n                                          EtsPresent =  true;\n                                      }\n                                  });\n\n                                  if(EtsPresent)\n                                  {\n\n                                    alert(' Bloc deja creer')\n                                  }\n                                  else\n                                  {\n                                        that.ElementToUpdate = that.ElementToUpdate +1 ;\n\n                                        AddBloc.set('message',text);\n                                        AddBloc.set('NameBloc','b'+that.ElementToUpdate+'***'+text);\n                                        InfoBlocMenuDistingue.set('text' , 'Contient le bloc ' + text);\n                                        InfoBlocMenuDistingue.set('idligne' , parseInt(that.idsortieselectionner.id, 10));\n                                        \n\n                                        AddtoContexMenu.set('text' , 'Contient le bloc ' + text);\n                                        AddtoContexMenu.set('target' , '.e-content');\n                                        AddtoContexMenu.set('id' , text);\n\n                                        let obj = Array.from(AddBloc).reduce((obj, [key, value]) => (\n                                                                    Object.assign(obj, { [key]: value })\n                                                                  ), {});\n                                        let obj2 = Array.from(AddtoContexMenu).reduce((obj, [key, value]) => (\n                                                                    Object.assign(obj, { [key]: value }) \n                                                                  ), {});\n                                        \n                                        let obj3 = Array.from(InfoBlocMenuDistingue).reduce((obj, [key, value]) => (\n                                                                          Object.assign(obj, { [key]: value }) \n                                                                        ), {});\n\n                                        grid.contextMenuModule.contextMenu.insertAfter( \n                                            [obj2], that.contextMenuItems[that.contextMenuItems.length-1].id, true); \n                                      \n                                        \n                                        \n\n                                        Vue.set(that.ListeOfBlocs,that.ListeOfBlocs.length, obj);\n                                        Vue.set(that.ListeOfIdOfCotextMenu,that.ListeOfIdOfCotextMenu.length, text);\n                                        Vue.set(that.ListeMessagesOfCotextMenu,that.ListeMessagesOfCotextMenu.length, obj3);\n\n\n\n                                  }\n\n                            }, 200);\n                        \n                          \n                    }\n                    else if(args.item.id === 'makeconst')\n                    {\n\n\n\n\n                          document.execCommand(\"copy\");\n\n                            setTimeout(async () => \n                            {\n\n                                  var AddBloc =new Map();\n                                  var EtsPresent =  false;\n\n                                  const text = await navigator.clipboard.readText();\n\n                                  that.ListeOfIdOfCotextMenu.forEach(function (item) {\n\n                                          \n                                          if(item == text)\n                                          {\n\n                                              EtsPresent =  true;\n                                          }\n                                      });\n\n                                      if(EtsPresent)\n                                      {\n\n                                        alert(' Bloc deja creer')\n                                      }\n                                      else\n                                      {\n                                        \n                                        that.ElementToUpdate = that.ElementToUpdate +1 ;\n                                        var element = new Map();\n\n                                        AddBloc.set('message','Le bloc ' + text + ' est une  constante');\n                                        AddBloc.set('NameBloc','b'+that.ElementToUpdate+'***'+text);\n\n                                          element.set('b'+that.ElementToUpdate+'***'+text,\"ConstStr\");\n                                          element.set('Entrer' , that.listeSorties[0].Entrer);\n                                          element.set('Output' , that.listeSorties[0].Output);\n                                        \n\n\n                                        let obj = Array.from(AddBloc).reduce((obj, [key, value]) => (\n                                                                    Object.assign(obj, { [key]: value })\n                                                                  ), {});\n                                        let obj2 = Array.from(element).reduce((obj2, [key, value]) => (\n                                                                      Object.assign(obj2, { [key]: value })\n                                                                    ), {});\n\n\n                                      \n                                        Vue.set(that.ListeOfBlocs,that.ListeOfBlocs.length, obj);\n                                        Vue.set(that.ListeElementsEnvoyerQuickFill, that.ListeElementsEnvoyerQuickFill.length, obj2);\n\n                                        \n\n\n\n\n                                      }\n\n\n\n\n                                \n                                  \n                            }, 200);\n\n                    }\n\n                    else if(that.ListeOfIdOfCotextMenu.some(e => e === args.item.id))\n                    {\n\n                          document.execCommand(\"copy\");\n\n\n\n                            setTimeout(async () => \n                            {\n\n                                  const text = await navigator.clipboard.readText();\n\n                                  that.ListeOfBlocs.forEach(function (item) {\n\n                                      \n                                      if(item.message == args.item.id)\n                                      {\n\n                                          var element = new Map();\n                                          element.set(item.NameBloc,text);\n                                          element.set('Entrer' , that.listeSorties[0].Entrer);\n                                          element.set('Output' , that.listeSorties[0].Output);\n                                           element.set('KeyOfElement' , \"v\" + (parseInt(that.idColoneUtiliser.id)+1));\n                                           console.log(\"fffffffffffffffffffffffff : \" , element);\n                                          let obj = Array.from(element).reduce((obj, [key, value]) => (\n                                                                      Object.assign(obj, { [key]: value })\n                                                                    ), {});\n\n                                          Vue.set(that.ListeElementsEnvoyerQuickFill, that.ListeElementsEnvoyerQuickFill.length, obj);\n\n                                          \n                                      }\n                                  });\n\n                                \n                                  \n                            }, 200);\n\n\n                    \n\n\n\n\n                    }\n\n\n              }\n\n\n\n\n\n        },\n        contextMenuBeforeOpen: function () \n        {    \n                var spreadsheet = this.$refs.spreadsheet;\n                spreadsheet.removeContextMenuItems(['Paste Special'], false);\n        },  /* Fonction qui s'execute avant l'ouverture du menu contextuel de la page d'accueil(spreadsheet) */\n        rowDataBound: function (args) {\n          \n           var that = this;\n           \n           var index = JSON.parse(JSON.stringify(that.idporgramme.slice(0, 1)));\n\n           \n           if (args.data.ID == index[0].valuse)\n           {\n              \n              args.row.style.backgroundColor = \"MistyRose\";\n              //args.row.css(\"backgroundColor\", \"#F3C3C3\");/*custom css applied to the row */\n           }\n\n               \n   \n       },\n       created: function () \n       {\n                    var that = this;  /* permet de manipuler les variables que retourne la fonction data */\n                    var spreadsheet = that.$refs.spreadsheet;\n                    var usedRange = 0;\n                    var indicelignemax = 0;\n                    var indicedecolenmax = 0;\n                    var septsept = 0;\n                    var sheetName = 0; /* nom de la feuille de calcul active */\n                    var IndiceEvolue = 0; \n                    var ChainePlusTest = \"\";\n                    var DataExpDemo =new Map(); /* Contient le jeu de données (entrée, sortie) */\n                    var resultcomponent = document.getElementById(\"resultatcomponent\"); /* Recupere la grille des resultats */\n                    resultcomponent.style.display = \"none\";\n\n\n\n\n                    spreadsheet.hideRibbonTabs(['Home' , 'Formulas' , 'Data','Insert' , 'View']); /* masque les elements pris en argument sur le ruban */\n                    spreadsheet.addRibbonTabs([  /* ajout les nouveaux menu sur le ruban */\n                          \n                          { header: { text: 'GenerateResult' }, content: \n                            [\n                              \n                                  \n                                { text: 'FLashFill', tooltipText: 'FlashFill',\n                                  click : function() {\n                                    var resultcomponent = document.getElementById(\"resultatcomponent\");\n                                    resultcomponent.style.display = \"none\";\n\n                                      indicedecolenmax = 0;\n                                      indicedecolenmax = 0;\n                                      septsept = 1;\n                                      ChainePlusTest = \"\";\n                                      DataExpDemo =new Map();\n                                      usedRange = spreadsheet.ej2Instances.getActiveSheet().usedRange; /* contient la plage activev(indice la derniere ligne, indice derniere colone) */\n                                      indicelignemax = usedRange.rowIndex;\n                                      indicedecolenmax = usedRange.colIndex;\n                                      sheetName = spreadsheet.ej2Instances.getActiveSheet().name;\n\n                                      spreadsheet.ej2Instances.getData(sheetName + \"!\"+ getRangeAddress([0, 0, indicelignemax, indicedecolenmax])).then( (cells)=> /* recupere les données de la plage active et effetue un traitement popur chaque cellule */\n                                      {\n\n                                              cells.forEach((cell)=>{ /* cells contient l'ensemble de toutes les cellules */\n\n                                                if(IndiceEvolue == indicedecolenmax) /* IndiceEvolue permet de parcourir les colones */\n                                                {\n                                                  \n                                                    /* Recuperation de la chaine de sortie s : elle peut etre vide ou non */\n                                                    ChainePlusTest = ChainePlusTest.substring(0, ChainePlusTest.length-3) /* on surpime la derniere chaine \"+++\" */\n\n                                                    if(typeof(cell.value) == \"undefined\")\n                                                    {\n                                                      DataExpDemo = DataExpDemo.set(septsept.toString()+'***'+'' , ChainePlusTest);\n                                                      /* septsept contient l'indice de la ligne en cours de traitement */\n\n                                                    }\n                                                    else\n                                                    {\n                                                      DataExpDemo = DataExpDemo.set(septsept.toString()+'***'+cell.value,ChainePlusTest);\n                                                      /* DataExpDemo est un dico qui contient les exemple d'entree sortie , stockés sur une certaine forme prenqnt en compte le numero de ligne de chaque exp */\n                                                    }\n                                                    \n                                                    ChainePlusTest = '';\n                                                    IndiceEvolue = 0;\n                                                    septsept = septsept + 1;\n                                                }\n                                                else\n                                                {\n                                                    /* cette partie nous permet de recuperer la chaine d'entrée sigma. La recuperation se fait tant qu'on a pa atteint la deniere colone active. */\n                                                    if(typeof(cell.value) != \"undefined\")\n                                                    {\n                                                      ChainePlusTest = ChainePlusTest + cell.value + \"+++\"; \n                                                      IndiceEvolue = IndiceEvolue + 1;\n                                                    }\n\n                                                }\n\n                                              });\n            \n                                          });\n\n                                      setTimeout(function cb() {  /* setTimeout indique que lq fonction cb() doit s'executer en derniere position */\n\n\n                                          var jsonText = JSON.stringify(Array.from(DataExpDemo.entries()));\n                                          \n                                          axios.post(\"http://localhost:8000/FlashFill/sessions/FlashExs\", {\n\n                                          headers: {  /* headers permet de definir le type de contenu qu'on veut envoyer : p il s'agit d'un contenu json dans notre cas */\n                                              'Content-Type': 'application/json',\n                                          },\n                                          data: {\n                                            \n                                            DataEntree : jsonText  /* DataEntree stocke nos donées json , qui sont ensuite traitées  au niveau du backend */\n                                          }\n                                        })\n                                        .then((response) => {\n\n\n\n                                          if(response.data[\"MessageCles\"] == \"False\")\n                                          {\n                                              Vue.swal.fire({\n                                                    icon: 'error',\n                                                    title: 'Oops...',\n                                                    text: 'FlashFill Do not understant what you want!',\n                                                    footer: '<p>It can be a condition execution problem : <br> Condition for good execution : <br> <ol><li>Your data most have the same structure</li><li>You most have a least one exemple with a output</li></ol><br></p>'\n                                                  });\n\n                                          }\n                                          else\n                                          {\n                                              \n                                                var DataFinalToBeReplace = response.data[\"DataFinalToBeReplace\"];\n                                                var IndiceColoneSortie = response.data[\"IndiceColoneSortie\"];\n                                                var timewastFlasfill = response.data[\"timewastFlasfill\"];\n                                                var NombreExemples = response.data[\"NombreExemples\"];\n                                                var memoryFlasfill = response.data[\"memoryFlasfill\"];\n                                                var Indiceline = 0;\n                                                var Arange= \"\"\n                                                \n\n\n                                                Object.keys(DataFinalToBeReplace).forEach(function(prop) {\n                                                  \n                                                  Indiceline = parseInt(prop);\n                                                  Arange = getRangeAddress([Indiceline-1, IndiceColoneSortie])\n                                                  Arange = Arange.toString().split(\":\")[0]\n                                                  spreadsheet.updateCell({ value: DataFinalToBeReplace[prop] },Arange);\n                                                  \n                                                }); \n\n\n\n                                                  Vue.swal.fire({\n                                                    title: '<strong><u>Statistic of FlashFill execution</u></strong>',\n                                                    icon: 'info',\n                                                    width: 400,\n                                                    html:\n                                                      '<p> Time execution :' + timewastFlasfill + 's <br>' + 'Number of programmes :' + 'Memory use :' + memoryFlasfill + 'Mo <br>' + NombreExemples + ' programme(s)</p> ',\n\n                                                    showCloseButton: true,\n                                                    showCancelButton: true,\n                                                    focusConfirm: false,\n                                                    confirmButtonText:\n                                                      '<i class=\"fa fa-thumbs-up\"></i> Great!',\n                                                  });\n                                      \n                                                \n\n\n\n                                          }\n                                          \n                                          \n                                        \n                                        })\n                                        .catch((e) => {\n                                          console.log(e);\n                                        });\n                                      });\n\n                                } },\n                                \n                                \n                                { text: 'QuickFill', tooltipText: 'QuickFill',\n                                click : function() \n                                {\n\n\n\n\n\n\n\n\n                                              indicedecolenmax = 0;\n                                              indicedecolenmax = 0;\n                                              septsept = 1;\n                                              ChainePlusTest = \"\";\n                                              DataExpDemo =new Map();\n                                              usedRange = spreadsheet.ej2Instances.getActiveSheet().usedRange;\n                                              indicelignemax = usedRange.rowIndex;\n                                              indicedecolenmax = usedRange.colIndex;\n                                              Vue.set(that.IndiceColoneSortie , 'id' , indicedecolenmax);\n                                              sheetName = spreadsheet.ej2Instances.getActiveSheet().name;\n\n                                                        \n                                              var grid = document.getElementsByClassName(\"e-grid\")[0].ej2_instances[0]; // recuperation de la Grid\n                                              var ElementMapInstanceEntree =  new Map();\n                                              var ElementIntermediareMapInstanceEntree =  new Map();\n                                              var ElementMapInstanceSortie =  new Map();\n                                              var ElementMapInstanceSortie2 =  new Map();\n                                              var listechoix = new Array();\n                                              var decoupersortier = new Array();\n                                              var decouperentree = new Array();\n                                              var MessageCles = true;\n                                              var resultcomponent = document.getElementById(\"resultatcomponent\");\n                                              resultcomponent.style.display = \"none\";\n\n                                              spreadsheet.ej2Instances.getData(sheetName + \"!\"+ getRangeAddress([0, 0, indicelignemax, indicedecolenmax])).then( (cells)=>\n                                              {\n\n                                                    cells.forEach((cell)=>{\n\n                                                      if(IndiceEvolue == indicedecolenmax)\n                                                      {\n                                                        \n                                                        \n                                                          ChainePlusTest = ChainePlusTest.substring(0, ChainePlusTest.length-3)\n\n                                                          if(typeof(cell.value) == \"undefined\")\n                                                          {\n                                                              DataExpDemo.set(septsept.toString()+'***'+'' , ChainePlusTest);\n\n                                                          }\n                                                          else\n                                                          {\n                                                              DataExpDemo.set(septsept.toString()+'***'+cell.value, ChainePlusTest);\n                                                          }\n                                                          \n                                                          ChainePlusTest = '';\n                                                          IndiceEvolue = 0;\n                                                          septsept = septsept + 1;\n                                                      }\n                                                      else\n                                                      {\n                                                          \n                                                          if(typeof(cell.value) != \"undefined\")\n                                                          {\n                                                            ChainePlusTest = ChainePlusTest + cell.value + \"+++\"; \n                                                            IndiceEvolue = IndiceEvolue + 1;\n                                                          }\n\n                                                      }\n\n                                                    });\n          \n                                              });\n\n                                              setTimeout(function cb() {\n\n                                                        \n                                                        DataExpDemo.forEach((value, key) => {\n                                                          \n                                                          if(value === \"\")\n                                                          {\n\n                                                              Vue.swal.fire({\n                                                                  icon: 'error',\n                                                                  title: 'Oops...',\n                                                                  text: 'QuickFill Do not understant what you want!',\n                                                                  footer: '<p>It can be a condition execution problem : <br> Condition for good execution : <br> <ol><li>Your data most have the same structure</li><li>You most have a least one exemple with a output</li></ol><br></p>'\n                                                                });\n\n\n                                                              MessageCles = false;\n\n                                                              return;\n\n                                                          }\n                                                          else\n                                                          {\n\n\n                                                                    ElementMapInstanceEntree = new Map();\n                                                                    ElementMapInstanceSortie = new Map();\n                                                                    ElementMapInstanceSortie2 = new Map();\n                                                                    ElementIntermediareMapInstanceEntree =  new Map();\n                                                                    decouperentree = value.split(\"+++\");\n                                                                    decoupersortier = key.split(\"***\");\n                                                                    \n                                                                    \n\n                                                                    if(decoupersortier.length >1 && decoupersortier[1] != \"\")\n                                                                    {\n\n                                                                        if(value != \"\")\n                                                                        {\n\n                                                                            decouperentree.forEach(function (item, index) {\n                                                                              ElementIntermediareMapInstanceEntree.set(\"v\"+(index+1).toString(), item);\n                                                                              ElementMapInstanceSortie.set(\"v\"+(index+1).toString(), item);\n                                                                              \n                                                                            });\n\n\n                                                                            let obj = Array.from(ElementIntermediareMapInstanceEntree).reduce((obj, [key, value]) => (\n                                                                            Object.assign(obj, { [key]: value })\n                                                                          ), {});\n\n\n                                                                            ElementMapInstanceSortie2.set(\"Entrer\" , obj);\n                                                                            ElementMapInstanceSortie.set(\"Output\" , decoupersortier[1]);\n                                                                            ElementMapInstanceSortie2.set(\"Output\" , decoupersortier[1]);\n                                                                            ElementMapInstanceSortie2.set(\"position\" , decoupersortier[0]);\n\n                                                                            listechoix.push(ElementMapInstanceSortie);\n\n                                                                            let obj2 = Array.from(ElementMapInstanceSortie2).reduce((obj, [key, value]) => (\n                                                                            Object.assign(obj, { [key]: value })\n                                                                          ), {});\n\n\n                                                                            Vue.set(that.listeSorties,that.listeSorties.length,obj2)\n\n                                                                        }\n\n\n\n                                                                    }\n                                                                    else\n                                                                    {\n\n                                                                          if(value != \"\")\n                                                                          {\n                                                                            decouperentree.forEach(function (item, index) {\n                                                                              ElementIntermediareMapInstanceEntree.set(\"v\"+(index+1).toString(), item);\n                                                                            });\n                                                                            let obj = Array.from(ElementIntermediareMapInstanceEntree).reduce((obj, [key, value]) => (\n                                                                            Object.assign(obj, { [key]: value })\n                                                                          ), {});\n                                                                            ElementMapInstanceEntree.set(\"Entrer\" , obj);\n                                                                            ElementMapInstanceEntree.set(\"position\" , decoupersortier[0]);\n                                                                            let obj2 = Array.from(ElementMapInstanceEntree).reduce((obj, [key, value]) => (\n                                                                            Object.assign(obj, { [key]: value })\n                                                                          ), {});\n                                                                            Vue.set(that.listeEntres ,that.listeEntres.length,obj2)\n                                                                            \n                                                                          }\n                                                                          \n\n                                                                    }\n\n\n                                                          }\n\n                                                        });\n\n\n\n\n\n                                                          if(MessageCles)\n                                                          {\n\n                                                            if(listechoix.length == 1)\n                                                            {\n\n\n                                                                    setTimeout(function knr() {\n\n\n                                                                                if(MessageCles)\n                                                                                {\n\n                                                                                      var test2 = new Array();\n                                                                                    \n                                                                                      \n                                                                                      var sortieUtiliser = listechoix[0];\n                                                                                      \n\n                                                                                        let obj = Array.from(sortieUtiliser).reduce((obj, [key, value]) => (\n                                                                                                  Object.assign(obj, { [key]: value }) // Be careful! Maps can have non-String keys; object literals can't.\n                                                                                                ), {});\n                                                                                      \n                                                                                        test2.push(obj);                                                  \n                                                                                                                                        \n                                                                                        grid.dataSource = test2;\n\n                                                                                        var spreedsheetcomponent = document.getElementById(\"spreedsheetcomponent\");\n                                                                                        spreedsheetcomponent.style.display = \"none\";\n\n\n                                                                                        var gridElement = document.getElementById(\"gridElement\");\n                                                                                        gridElement.style.display = \"block\"; \n                                                                                }\n                                                                    });\n                                                              \n                                                            }\n                                                            else\n                                                            {\n\n                                                                Vue.swal.fire({\n                                                                      title: 'Que desirer vous faire avec QuickFIll',\n                                                                      html: `\n                                                                                <div class=\"form-check\">\n                                                                                  <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value=\"option1\" checked>\n                                                                                  <label class=\"form-check-label\" for=\"exampleRadios1\">\n                                                                                      Faire du filtrage\n                                                                                  </label>\n                                                                                </div>\n                                                                                <div class=\"form-check\">\n                                                                                  <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option2\">\n                                                                                  <label class=\"form-check-label\" for=\"exampleRadios2\">\n                                                                                    Faire des blocs sur pluiseurs exemples\n                                                                                  </label>\n                                                                                </div>\n                                                                      `,\n                                                                      focusConfirm: false,\n                                                                      preConfirm: () => \n                                                                      {\n                                                                        \n                                                                            if (document.getElementById('exampleRadios1').checked)\n                                                                            {\n                                                                                  setTimeout(function knr() {\n\n\n                                                                                                if(MessageCles)\n                                                                                                {\n                                                                                                    \n                                                                                                      var test2 = new Array();\n                                                                                                    \n                                                                                                      \n                                                                                                      var sortieUtiliser = listechoix[0];\n\n                                                                                                      \n\n                                                                                                      let obj = Array.from(sortieUtiliser).reduce((obj, [key, value]) => (\n                                                                                                                  Object.assign(obj, { [key]: value }) // Be careful! Maps can have non-String keys; object literals can't.\n                                                                                                                ), {});\n                                                                                                      \n                                                                                                      test2.push(obj);                                                  \n                                                                                                                                                        \n                                                                                                      grid.dataSource = test2;\n\n                                                                                                      var spreedsheetcomponent = document.getElementById(\"spreedsheetcomponent\");\n                                                                                                      spreedsheetcomponent.style.display = \"none\";\n\n\n                                                                                                      var gridElement = document.getElementById(\"gridElement\");\n                                                                                                      gridElement.style.display = \"block\"; \n\n                                                                                                      Vue.set(that.ChoiseQuickFill, 'choix' , 2);\n                                                                                                }\n                                                                                    });\n\n                                                                            }\n                                                                            else if(document.getElementById('exampleRadios2').checked)\n                                                                            {\n                                                                                \n\n                                                                                    setTimeout(function knr2() {\n\n\n                                                                                                if(MessageCles)\n                                                                                                {\n\n                                                                                                      var test2 = new Array();\n                                                                                                      listechoix.forEach(function (item) \n                                                                                                      {\n                                                                                                        let obj = Array.from(item).reduce((obj, [key, value]) => (\n                                                                                                                  Object.assign(obj, { [key]: value }) // Be careful! Maps can have non-String keys; object literals can't.\n                                                                                                                ), {});\n                                                                                                        test2.push(obj);\n                                                                                                      });\n                                                \n                                                                                                      grid.dataSource = test2;\n\n                                                                                                      var spreedsheetcomponent = document.getElementById(\"spreedsheetcomponent\");\n                                                                                                      spreedsheetcomponent.style.display = \"none\";\n\n\n                                                                                                      var gridElement = document.getElementById(\"gridElement\");\n                                                                                                      gridElement.style.display = \"block\"; \n\n\n\n                                                                                                      Vue.set(that.ChoiseQuickFill, 'choix' , 3);\n                                                                                                }\n                                                                                    });\n                                                                            \n                                                                            \n                                                                            \n\n                                                                            }\n                                                                          \n                                                                        \n                                                                      }\n                                                                  });\n\n\n\n\n                                                            }\n\n\n\n\n                                                          }\n\n                                                                              \n\n                                                    });\n\n\n\n\n\n\n\n\n                                } } ,\n\n\n\n                                { text: 'FLashFillLoopFree', tooltipText: 'FLashFillLoopFree',\n                                click : function() {\n\n                                    indicedecolenmax = 0;\n                                    indicedecolenmax = 0;\n                                    septsept = 1;\n                                    ChainePlusTest = \"\";\n                                    DataExpDemo =new Map();\n                                    var AddElement =new Map();\n                                    var AddElement2 =new Map();\n                                    var listeofObjectElement =  new Array();\n                                    usedRange = spreadsheet.ej2Instances.getActiveSheet().usedRange;\n                                    indicelignemax = usedRange.rowIndex;\n                                    indicedecolenmax = usedRange.colIndex;\n                                    sheetName = spreadsheet.ej2Instances.getActiveSheet().name;\n                                    var resultcomponent = document.getElementById(\"resultatcomponent\");\n                                    resultcomponent.style.display = \"none\";\n\n                                    spreadsheet.ej2Instances.getData(sheetName + \"!\"+ getRangeAddress([0, 0, indicelignemax, indicedecolenmax])).then( (cells)=>\n                                    {\n\n                                          \n\n                                            cells.forEach((cell)=>{\n\n                                              if(IndiceEvolue == indicedecolenmax)\n                                              {\n                                                \n                                                \n                                                  ChainePlusTest = ChainePlusTest.substring(0, ChainePlusTest.length-3)\n\n                                                  if(typeof(cell.value) == \"undefined\")\n                                                  {\n                                                    DataExpDemo = DataExpDemo.set(septsept.toString()+'***'+'' , ChainePlusTest);\n\n                                                  }\n                                                  else\n                                                  {\n                                                    DataExpDemo = DataExpDemo.set(septsept.toString()+'***'+cell.value,ChainePlusTest);\n                                                  }\n                                                  \n                                                  ChainePlusTest = '';\n                                                  IndiceEvolue = 0;\n                                                  septsept = septsept + 1;\n                                              }\n                                              else\n                                              {\n                                                  \n                                                  if(typeof(cell.value) != \"undefined\")\n                                                  {\n                                                    ChainePlusTest = ChainePlusTest + cell.value + \"+++\"; \n                                                    IndiceEvolue = IndiceEvolue + 1;\n                                                  }\n\n                                              }\n\n                                            });\n          \n                                        });\n\n                                    setTimeout(function cb() {\n\n\n                                        var jsonText = JSON.stringify(Array.from(DataExpDemo.entries()));\n                                        \n                                        axios.post(\"http://localhost:8000/FlashFill/sessions/FlashFreeLoopExs\", {\n\n                                        headers: {\n                                            'Content-Type': 'application/json',\n                                        },\n                                        data: {\n                                          \n                                          DataEntree : jsonText\n                                        }\n                                      })\n                                      .then((response) => {\n\n\n\n                                        if(response.data[\"MessageCles\"] == \"False\")\n                                        {\n                                            Vue.swal.fire({\n                                                  icon: 'error',\n                                                  title: 'Oops...',\n                                                  text: 'FlashFill Do not understant what you want!',\n                                                  footer: '<p>It can be a condition execution problem : <br> Condition for good execution : <br> <ol><li>Your data most have the same structure</li><li>You most have a least one exemple with a output</li></ol><br></p>'\n                                                });\n\n                                        }\n                                        else\n                                        {\n                                            \n                                              var DataFinalToBeReplace = response.data[\"DataFinalToBeReplace\"];\n                                              var IndiceColoneSortie = response.data[\"IndiceColoneSortie\"];\n                                              var timewastFlasfill = response.data[\"timewastFlasfill\"];\n                                              var NombreExemples = response.data[\"NombreExemples\"];\n                                              var memoryFlasfill = response.data[\"memoryFlasfill\"];\n                                              var listedesprogrammes = response.data[\"listedesprogrammes\"];\n                                              var indiceduprogrammechoisi = response.data[\"indiceduprogrammechoisi\"];\n                                              var Indiceline = 0;\n                                              var Arange= \"\";\n                                              var newObject = new Map();\n                                              var grid2 = document.getElementsByClassName(\"e-grid\")[1].ej2_instances[0];\n                                              AddElement.set('valuse',NombreExemples);\n                                              AddElement2.set('valuse',indiceduprogrammechoisi);\n\n                                              \n\n                                              Object.keys(DataFinalToBeReplace).forEach(function(prop) {\n                                                \n                                                Indiceline = parseInt(prop);\n                                                Arange = getRangeAddress([Indiceline-1, IndiceColoneSortie])\n                                                Arange = Arange.toString().split(\":\")[0]\n                                                spreadsheet.updateCell({ value: DataFinalToBeReplace[prop] },Arange);\n                                                \n                                              }); \n\n                                                \n                                              \n\n\n                                               \n                                                \n\n                                                Vue.swal.fire({\n                                                  title: '<strong><u>Statistic of FlashFill execution</u></strong>',\n                                                  icon: 'info',\n                                                  width: 400,\n                                                  html:\n                                                    '<p> Time execution :' + timewastFlasfill + 's <br>' + 'Number of programmes :' +NombreExemples + ' programme(s)<br>'+ 'Memory use :' + memoryFlasfill + 'Mo</p>' ,\n\n                                                  showCloseButton: true,\n                                                  showCancelButton: true,\n                                                  focusConfirm: false,\n                                                  confirmButtonText:\n                                                    '<i class=\"fa fa-thumbs-up\"></i> Great!',\n                                                });\n\n                                                \n                                            \n                                              let obj = Array.from(AddElement).reduce((obj, [key, value]) => (\n                                                                    Object.assign(obj, { [key]: value })\n                                                                  ), {});\n                                              let obj2 = Array.from(AddElement2).reduce((obj, [key, value]) => (\n                                                                    Object.assign(obj, { [key]: value })\n                                                                  ), {});\n                                              \n                                              Object.assign(that.$data, that.$options.data());\n                                              Vue.set(that.lenofprogrammes,0, obj);\n                                              Vue.set(that.idporgramme,0, obj2);\n                                              listedesprogrammes.forEach((element,index) =>{\n                                                  \n\n                                                    newObject.set('ID' , index)\n                                                    newObject.set('programme' , element)\n                                                    let obj3 = Array.from(newObject).reduce((obj, [key, value]) => (\n                                                                    Object.assign(obj, { [key]: value })\n                                                                  ), {});\n                                                    listeofObjectElement.push(obj3)\n\n                                                    Vue.set(that.ListeDesProgrammesRetourner, that.ListeDesProgrammesRetourner.length, element);\n\n                                                    \n\n\n\n\n                                              });\n                                              grid2.dataSource = listeofObjectElement;\n\n                                              var resultcomponent = document.getElementById(\"resultatcomponent\");\n                                              resultcomponent.style.display = \"block\";\n                                    \n                                              \n\n\n\n                                        }\n                                        \n                                        \n                                      \n                                      })\n                                      .catch((e) => {\n                                        console.log(e);\n                                      });\n                                    });\n\n                                } },\n\n\n\n\n\n                            ] \n                            \n                          \n                          \n                          \n                          \n                          }\n                          \n                          \n                          ,{ header: { text: 'Help' }, content: [{ text: 'QuickFill', tooltipText: 'QuickFill',\n                          click : function() {\n\n                                Vue.swal.fire({\n                                      title: '<strong><u>QuicFill Usage example</u></strong>',\n                                      icon: 'info',\n                                      width: 900,\n                                      html:\n                                        '<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/d_elXY2Lcfk\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>',\n                                      showCloseButton: true, /* pour la fermeture du modal */\n                                      showCancelButton: true, /* bouton cancel */\n                                      focusConfirm: false,\n                                      confirmButtonText:\n                                        '<i class=\"fa fa-thumbs-up\"></i> Great!',\n                                    });\n\n\n                          } },\n                          \n                          \n                          { text: 'FlashFill', tooltipText: 'FlashFill',\n                          click : function() {\n\n\n                              Vue.swal.fire({\n                                      title: '<strong><u>FlashFill Usage example</u></strong>',\n                                      icon: 'info',\n                                      width: 900,\n                                      html:\n                                        '<iframe width=\"768\" height=\"360\" src=\"https://www.youtube.com/embed/A7-E6sf6JOc?list=RDQMuK_M4fl3Ds8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>',\n                                      showCloseButton: true,\n                                      showCancelButton: true,\n                                      focusConfirm: false,\n                                      confirmButtonText:\n                                        '<i class=\"fa fa-thumbs-up\"></i> Great!',\n                                    });\n\n                          } },\n                          \n                          { text: 'About', tooltipText: 'About',\n                          click : function() {\n\n\n                              Vue.swal.fire({\n                                      title: '<strong>About the project</strong>',\n                                      icon: 'info',\n                                      width: 900,\n                                      html:\n                                        '<p>QuicFill project is a project developper by Fokou Vanessa Laure (adress mail) base on the FlashFill algorithme  to test a idea of and iteractive approche using independant bloc approche to generate string progamme base on example</p>',\n                                      showCloseButton: true,\n                                      showCancelButton: true,\n                                      focusConfirm: false,\n                                      confirmButtonText:\n                                        '<i class=\"fa fa-thumbs-up\"></i> Great!',\n                                    });\n                          } },\n                          \n                          ] }]\n                      );\n                        \n                \n            },\n      \n        },\n\n\n\n\n    provide: /* defintion des elements presentes dans la grille */\n    { \n      grid: [ContextMenu, Page], \n    }, \n\n\n\n  }\n</script>\n\n<style>\n  @import \"../node_modules/@syncfusion/ej2-vue-spreadsheet/styles/material.css\";\n  @import '../node_modules/@syncfusion/ej2-base/styles/material.css';  \n  @import '../node_modules/@syncfusion/ej2-buttons/styles/material.css';\n  @import '../node_modules/@syncfusion/ej2-calendars/styles/material.css';    \n  @import '../node_modules/@syncfusion/ej2-dropdowns/styles/material.css';  \n  @import '../node_modules/@syncfusion/ej2-inputs/styles/material.css';  \n  @import '../node_modules/@syncfusion/ej2-navigations/styles/material.css';\n  @import '../node_modules/@syncfusion/ej2-popups/styles/material.css';\n  @import '../node_modules/@syncfusion/ej2-splitbuttons/styles/material.css';\n  @import '../node_modules/@syncfusion/ej2-grids/styles/material.css';\n  @import \"../node_modules/@syncfusion/ej2-spreadsheet/styles/material.css\";\n  @import \"../node_modules/sweetalert2/dist/sweetalert2.min.css\";\n  @import \"../node_modules/@syncfusion/ej2-vue-grids/styles/material.css\";\n</style>\n"],"sourceRoot":"src"}]}