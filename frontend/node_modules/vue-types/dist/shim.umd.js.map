{"version":3,"file":"shim.umd.js","sources":["../node_modules/is-plain-object/dist/is-plain-object.mjs","../src/config.ts","../src/shim.ts","../src/sensibles.ts"],"sourcesContent":["/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexport { isPlainObject };\n","export const config = {\n  silent: false,\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { isPlainObject } from 'is-plain-object'\nimport { typeDefaults } from './sensibles'\nimport { config } from './config'\nimport { VueTypesDefaults } from './types'\nexport { VueTypeDef, VueTypeValidableDef } from './types'\nconst dfn = Object.defineProperty\n\nconst isArray =\n  Array.isArray ||\n  function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]'\n  }\n\nfunction type(name: string, props: any = {}, validable = false): any {\n  const descriptors: PropertyDescriptorMap = {\n    _vueTypes_name: {\n      value: name,\n      writable: true,\n    },\n    def: {\n      value(this: any, v: any) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const t = this\n        if (v === undefined) {\n          if ('default' in this) {\n            delete this.default\n          }\n          return this\n        }\n        if (isArray(v)) {\n          t.default = () => [].concat(v as any)\n        } else if (isPlainObject(v)) {\n          t.default = () => Object.assign({}, v)\n        } else {\n          t.default = v\n        }\n        return t\n      },\n    },\n    isRequired: {\n      get(this: any) {\n        this.required = true\n        return this\n      },\n    },\n  }\n\n  if (validable) {\n    ;(descriptors as any).validate = {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      value() {},\n    }\n  }\n  if (!props.validator) {\n    props.validator = () => true\n  }\n\n  return Object.defineProperties(props, descriptors)\n}\n\nexport { config }\n\ntype TypeShim = <T = any>(...args: any[]) => any\n\nexport const any: TypeShim = () => type('any', {}, true)\nexport const func: TypeShim = () => type('func', { type: Function }, true)\nexport const bool = () => type('bool', { type: Boolean }, true)\nexport const string: TypeShim = () => type('string', { type: String }, true)\nexport const number: TypeShim = () => type('number', { type: Number }, true)\nexport const array: TypeShim = () => type('array', { type: Array }, true)\nexport const object: TypeShim = () => type('object', { type: Object }, true)\nexport const symbol = () => type('symbol')\nexport const integer: TypeShim = () => type('integer', { type: Number })\nexport const oneOf: TypeShim = (a: any) => type('oneOf')\nexport const custom: TypeShim = (a: any) => type('custom')\nexport const instanceOf: TypeShim = (Constr: any) =>\n  type('instanceOf', { type: Constr })\nexport const oneOfType: TypeShim = (a: any) => type('oneOfType')\nexport const arrayOf: TypeShim = (a: any) => type('arrayOf', { type: Array })\n\nexport const objectOf: TypeShim = (a: any) => type('objectOf', { type: Object })\nexport const shape: TypeShim = (a: any) =>\n  dfn(type('shape', { type: Object }), 'loose', {\n    get() {\n      return this\n    },\n  })\n/* eslint-enable @typescript-eslint/no-unused-vars */\n\nfunction createValidator(\n  root: any,\n  name: string,\n  props: any,\n  getter = false,\n  validable = false,\n) {\n  const prop = getter ? 'get' : 'value'\n  const descr = {\n    [prop]: () =>\n      type(name, Object.assign({}, props), validable).def(\n        getter ? root.defaults[name] : undefined,\n      ),\n  }\n\n  return dfn(root, name, descr)\n}\n\nexport function fromType(name: string, source: any, props: any = {}) {\n  const t = type(name, Object.assign({}, source, props), !!source.validable)\n  t.validator && delete t.validator\n  return t\n}\n\nexport const toValidableType = <T>(name: string, props: any) =>\n  type(name, props, true)\nexport const toType = <T>(name: string, props: any) => type(name, props)\n\nconst BaseVueTypes = /*#__PURE__*/ (() =>\n  class BaseVueTypes {\n    static defaults: Partial<VueTypesDefaults> = {}\n\n    static sensibleDefaults: Partial<VueTypesDefaults> | boolean\n\n    static config = config\n\n    static get any() {\n      return any()\n    }\n    static get func() {\n      return func().def(this.defaults.func)\n    }\n    static get bool() {\n      return bool().def(this.defaults.bool)\n    }\n    static get string() {\n      return string().def(this.defaults.string)\n    }\n    static get number() {\n      return number().def(this.defaults.number)\n    }\n    static get array() {\n      return array().def(this.defaults.array)\n    }\n    static get object() {\n      return object().def(this.defaults.object)\n    }\n    static get symbol() {\n      return symbol()\n    }\n    static get integer() {\n      return integer().def(this.defaults.integer)\n    }\n    static oneOf = oneOf\n    static custom = custom\n    static instanceOf = instanceOf\n    static oneOfType = oneOfType\n    static arrayOf = arrayOf\n    static objectOf = objectOf\n    static shape = shape\n    static extend<T = any>(props: any): T {\n      if (isArray(props)) {\n        props.forEach((p) => this.extend(p))\n        return this as any\n      }\n      const { name, validate, getter = false, type = null } = props\n      // If we are inheriting from a custom type, let's ignore the type property\n      const extType = isPlainObject(type) && type.type ? null : type\n      return createValidator(this, name, { type: extType }, getter, !!validate)\n    }\n    static utils = {\n      toType: type as (...args: any[]) => any,\n      validate: (...args: any[]) => !!args,\n    }\n  })()\n\nexport function createTypes(defs: Partial<VueTypesDefaults> = typeDefaults()) {\n  return class extends BaseVueTypes {\n    static defaults = Object.assign({}, defs)\n\n    static get sensibleDefaults() {\n      return Object.assign({}, this.defaults)\n    }\n\n    static set sensibleDefaults(v: boolean | Partial<VueTypesDefaults>) {\n      if (v === false) {\n        this.defaults = {}\n        return\n      }\n      if (v === true) {\n        this.defaults = Object.assign({}, defs)\n        return\n      }\n      this.defaults = Object.assign({}, v)\n    }\n  }\n}\n\n/* eslint-disable no-console */\nif (process.env.NODE_ENV !== 'production') {\n  config.silent === false &&\n    console.warn(\n      'You are using the production shimmed version of VueTypes in a development build. Refer to https://dwightjack.github.io/vue-types/guide/installation.html#production-build to learn how to configure VueTypes for usage in multiple environments.',\n    )\n}\n/* eslint-enable no-console */\n\nexport default class VueTypes /*#__PURE__*/ extends createTypes() {}\n","import { VueTypesDefaults } from './types'\n\nexport const typeDefaults = (): VueTypesDefaults => ({\n  func: () => undefined,\n  bool: true,\n  string: '',\n  number: 0,\n  array: () => [],\n  object: () => ({}),\n  integer: 0,\n})\n"],"names":["isObject","o","Object","prototype","toString","call","isPlainObject","ctor","prot","undefined","constructor","hasOwnProperty","config","silent","dfn","defineProperty","isArray","Array","value","type","name","props","validable","descriptors","_vueTypes_name","writable","def","v","this","concat","assign","isRequired","get","required","validate","validator","defineProperties","any","func","Function","bool","Boolean","string","String","number","Number","array","object","symbol","integer","oneOf","a","custom","instanceOf","Constr","oneOfType","arrayOf","objectOf","shape","createValidator","root","getter","descr","defaults","toValidableType","BaseVueTypes","extend","forEach","p","_this","sensibleDefaults","utils","toType","createTypes","defs","VueTypes","source","t"],"mappings":"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"}